{
  "comments": [
    {
      "key": {
        "uuid": "ba44c8d2_d8dae5dd",
        "filename": "lib/libtle_l4p/tcp_tx_seg.h",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 118
      },
      "writtenOn": "2019-06-11T23:29:30Z",
      "side": 1,
      "message": "any reason for that?",
      "revId": "2ac944fec10daa33a806d98c24b36626987137b5",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c4ca7a1f_e07a36ff",
        "filename": "lib/libtle_l4p/tcp_tx_seg.h",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1754
      },
      "writtenOn": "2019-06-12T07:38:21Z",
      "side": 1,
      "message": "Refer to man 2 send, send failure due to full send buffer shall return EAGAIN, instead of ENOSPC.",
      "parentUuid": "ba44c8d2_d8dae5dd",
      "revId": "2ac944fec10daa33a806d98c24b36626987137b5",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5092906c_78e5cfb6",
        "filename": "lib/libtle_l4p/tcp_tx_seg.h",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 118
      },
      "writtenOn": "2019-06-12T09:42:31Z",
      "side": 1,
      "message": "man -s 2 send\n...\n EAGAIN or EWOULDBLOCK\n              The  socket  is  marked  nonblocking and the requested operation\n              would block.  POSIX.1-2001 allows either error  to  be  returned\n              for  this case, and does not require these constants to have the\n              same value, so a portable application should check for both pos√¢\n              sibilities.\n\n       EAGAIN (Internet  domain  datagram  sockets)  The socket referred to by\n              sockfd had not previously been bound to  an  address  and,  upon\n              attempting  to  bind  it to an ephemeral port, it was determined\n              that all port numbers in the ephemeral port range are  currently\n              in        use.         See        the        discussion       of\n              /proc/sys/net/ipv4/ip_local_port_range in ip(7).\n\n\nDoesn\u0027t look to me like that refer to our situation.\nIn fact this is not the send buffer, this is our internal limitaion:\ntle_tcp_stream_send(...)\n{\n   struct rte_mbuf *segs[TCP_MAX_PKT_SEG];\n    ...\n     rc \u003d tcp_segmentation(pkt[i], segs, RTE_DIM(segs),\n                                \u0026s-\u003etx.dst, mss);\n\nSo not sure what is an appropriate value in that case, might be EMSGSIZE.",
      "parentUuid": "c4ca7a1f_e07a36ff",
      "revId": "2ac944fec10daa33a806d98c24b36626987137b5",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f0e821f9_77d4a9d9",
        "filename": "lib/libtle_l4p/tcp_tx_seg.h",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1759
      },
      "writtenOn": "2019-06-12T12:33:09Z",
      "side": 1,
      "message": "Here has been modified to support tso.\nLike:\n\tfree_slots \u003d rte_ring_free_count(s-\u003etx.q);\n\tfree_slots \u003d RTE_MIN(free_slots, RTE_DIM(segs));\n\trc \u003d tcp_segmentation(pkt[i], segs, free_slots,\n\t\t\t\u0026s-\u003etx.dst, mss);\n\nSo the reason of failure here is lack of space in send buffer. Therefore EAGAIN is returned.",
      "parentUuid": "5092906c_78e5cfb6",
      "revId": "2ac944fec10daa33a806d98c24b36626987137b5",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "704f580b_f979f0a2",
        "filename": "lib/libtle_l4p/tcp_tx_seg.h",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 118
      },
      "writtenOn": "2019-06-12T12:40:00Z",
      "side": 1,
      "message": "Didn\u0027t see that change yet, but...\nfree_slots still can\u0027t be bigger then RTE_DIM(segs), right?\nSo it is still our internal limitation in some cases.\nBTW, even if we talking situation when send buffer is full, I am not sure EAGAIN is appopriate.\nSee citation from man send above.",
      "parentUuid": "f0e821f9_77d4a9d9",
      "revId": "2ac944fec10daa33a806d98c24b36626987137b5",
      "serverId": "6d2eb258-4fe2-443e-8a38-ca81da23d4c2",
      "unresolved": true
    }
  ]
}