// Test delayed ER with 3 packets outstanding, receiver sending SACKs.
// Added wrinkles: (1) ACK for missing first packet finally arrives,
// filling the hole and making the ER superfluous.
// This test verifies that the ER timer gets correctly cancelled.

// Enable delayed early retransmit.
`sysctl -q net.ipv4.tcp_early_retrans=2`

0.000 socket(..., SOCK_STREAM, IPPROTO_TCP) = 3
0.000 setsockopt(3, SOL_SOCKET, SO_REUSEADDR, [1], 4) = 0
0.000 bind(3, ..., ...) = 0
0.000 listen(3, 1) = 0

0.100 < S 0:0(0) win 32792 <mss 1460,sackOK,nop,nop,nop,wscale 7>
0.100 > S. 0:0(0) ack 1 <mss 1460,nop,nop,sackOK,nop,wscale 6>
0.200 < . 1:1(0) ack 1 win 257
0.200 accept(3, ..., ...) = 4

0.200 write(4, ..., 4380) = 4380
0.200 > P. 1:4381(4380) ack 1
0.300 < . 1:1(0) ack 1 win 257 <sack 1461:2921,nop,nop>
0.300 < . 1:1(0) ack 1 win 257 <sack 1461:4381,nop,nop>
0.310 < . 1:1(0) ack 4381 win 257
// No ER or RTO timer should fire here, since all data is ACKed

1.800 close(4) = 0
1.800 > F. 4381:4381(0) ack 1
1.900 < F. 1:1(0) ack 4382 win 257
1.900 > . 4382:4382(0) ack 2

2.000 `sysctl -q net.ipv4.tcp_early_retrans=3`
